static Node<int> ConvertToSortedList(Node<int> chain)//Q36
        {
            Node<int> rtnList = null;
            while (chain != null)
            {
                rtnList = InputIntoSortedList(rtnList, chain.Value);
                chain = chain.Next;
            }
            return rtnList;
        }

        static Node<int> InputIntoSortedList(Node<int> list, int num)//Q36 helper
        {
            Node<int> startOfList = list;
            if (list == null)
            {
                list = new Node<int>(num);
                return list;
            }
            if (num <= startOfList.Value)
            {
                startOfList = new Node<int>(num, startOfList);
            }
            else
            {
                list = startOfList;
                while (list.HasNext() && num > list.Next.Value)
                {
                    list = list.Next;
                }
                list.Next = new Node<int>(num, list.Next);
            }
            return startOfList;
        }